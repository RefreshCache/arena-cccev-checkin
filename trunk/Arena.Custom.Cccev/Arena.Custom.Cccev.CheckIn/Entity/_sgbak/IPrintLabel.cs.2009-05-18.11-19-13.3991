/**********************************************************************
* Description:	TBD
* Created By:   Jason Offutt @ Central Christian Church of the East Valley
* Date Created:	TBD
*
* $Workfile: IPrintLabel.cs $
* $Revision: 5 $ 
* $Header: /trunk/Arena.Custom.Cccev/Arena.Custom.Cccev.CheckIn/Entity/IPrintLabel.cs   5   2009-02-24 11:29:49-07:00   JasonO $
* 
* $Log: /trunk/Arena.Custom.Cccev/Arena.Custom.Cccev.CheckIn/Entity/IPrintLabel.cs $
*  
*  Revision: 5   Date: 2009-02-24 18:29:49Z   User: JasonO 
*  Fixing typo. 
*  
*  Revision: 4   Date: 2009-02-24 18:18:51Z   User: JasonO 
*  Updating org setting keys for provider class Luids. 
*  
*  Revision: 3   Date: 2009-01-06 17:35:06Z   User: JasonO 
*  
*  Revision: 2   Date: 2009-01-06 16:34:25Z   User: JasonO 
*  
*  Revision: 1   Date: 2009-01-06 16:12:00Z   User: JasonO 
**********************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;

using Arena.Core;
using Arena.Exceptions;

namespace Arena.Custom.Cccev.CheckIn.Entity
{
    public interface IPrintLabel
    {
        void Print(FamilyMember person, IEnumerable<Occurrence> occurrences, OccurrenceAttendance attendance);
    }

    public static class PrintLabelHelper
    {
        public static Lookup DefaultPrintLabelSystem(int organizationID)
        {
            Arena.Organization.Organization org = new Arena.Organization.Organization(organizationID);
            Lookup lookup = null;

            if (org.Settings["Cccev.PrintLabelDefaultSystemID"] != null)
            {
                try
                {
                    lookup = new Lookup(int.Parse(org.Settings["Cccev.PrintLabelDefaultSystemID"]));
                }
                catch { }
            }

            return lookup;
        }

        public static IPrintLabel GetPrintLabelClass(Lookup printLabelSystem)
        {
            Assembly assembly = Assembly.Load(printLabelSystem.Qualifier2);

            if (assembly == null)
                return null;

            Type type = assembly.GetType(printLabelSystem.Qualifier8);

            if (type == null)
            {
                type = assembly.GetType(printLabelSystem.Qualifier2 + "." + printLabelSystem.Qualifier8);
            }

            if (type == null)
            {
                throw new ArenaApplicationException(string.Format("Could not find '{0}' class in '{1}' assembly.", printLabelSystem.Qualifier2, printLabelSystem.Qualifier8));
            }

            return (IPrintLabel)Activator.CreateInstance(type);
        }
    }
}
