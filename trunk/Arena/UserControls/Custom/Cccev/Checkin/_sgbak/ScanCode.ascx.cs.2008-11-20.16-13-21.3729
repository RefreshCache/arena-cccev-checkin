/****************************************************************************
* Description:	
* Created By:   Nick Airdo @ Central Christian Church of the East Valley
* Date Created: mm/dd/yyyy hh:mm
*
* $Workfile: ScanCode.ascx.cs $
* $Revision: 1 $ 
* $Header: /Arena/Arena/Inetpub/wwwroot/Arena/UserControls/Custom/Cccev/Checkin/ScanCode.ascx.cs   1   2008-09-23 09:09:26-07:00   nicka $
*  
* $Log: /Arena/Arena/Inetpub/wwwroot/Arena/UserControls/Custom/Cccev/Checkin/ScanCode.ascx.cs $
*  
*  Revision: 1   Date: 2008-09-23 16:09:26Z   User: nicka 
****************************************************************************/
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

using Arena.Core;
using Arena.Portal;
using Arena.Portal.UI;
using Arena.Security;
using Arena.Custom.Cccev.CheckIn;
using Arena.Custom.Cccev.CheckIn.Entity;

namespace ArenaWeb.UserControls.Custom.Cccev.Checkin
{
	public partial class ScanCode : PortalControl
	{
		#region Module Settings

		//[SmartPageSetting( "Select by Phone Page", "The page that handles finding a family by phone number", "UserControls/Custom/Cccev/Checkin/SelectByPhone.ascx", RelatedModuleLocation.Beneath )]
		[PageSetting( "Search by Phone Page", "The page that handles finding a family by phone number", false )]
		public string SearchByPhonePageSetting { get { return Setting( "SearchByPhonePage", "", false ); }	}

		//[SmartPageSetting( "Select Family Member Page", "The page that displays family members for selection", "UserControls/Custom/Cccev/Checkin/SelectFamilyMember.ascx", RelatedModuleLocation.Beneath )]
		[PageSetting( "Select Family Member Page", "The page that displays family members for selection", true )]
		public string SelectFamilyMemberPageSetting { get { return Setting( "SelectFamilyMemberPage", "", true ); } }

		[TextSetting( "Campus", "Campus code for which this application/page is serving.", true )]
		public string CampusSetting { get { return Setting( "Campus", "", true ); } }

		[TextSetting( "Occurrence Category ID", "Occurrence Category to constrain occurrence matching", false )]
		public string OccurrenceCategoryIDSetting { get { return Setting( "OccurrenceCategoryID", "-1", false ); } }

		[TextSetting( "Event is Closed Message", "Message to show when event is closed", false )]
		public string EventIsClosedMessageSetting { get { return Setting( "EventIsClosedMessage", "The event is closed", false ); } }

		[TextSetting( "Scan Now Message", "Message to show it is OK for people to try scanning their code", false )]
		public string ScanNowMessageSetting { get { return Setting( "ScanNowMessage", "Scan Now", false ); } }

		[TextSetting( "Search By Phone Message", "Message to show on button to search by phone", false )]
		public string SearchByPhoneMessageSetting { get { return Setting( "SearchByPhoneMessage", "Search By Phone", false ); } }

		[BooleanSetting( "Allow Scan By Phone", "Controls whether or not a person can search by phone.  Defaults to true.", true, true )]
		public bool AllowScanByPhoneSetting { get { return Convert.ToBoolean( Setting( "AllowScanByPhone", "true", false ) ); } }

		#endregion

		protected void Page_Load( object sender, EventArgs e )
		{
			if ( Session[ Constants.SESS_CAMPUSCODE ] == null )
			{
				SetCampus();
			}

			if ( ! this.txtScanID.Text.Equals( "" ) )
			{
				Response.Redirect( "default.aspx?page=" + SelectFamilyMemberPageSetting + "&scanID=" + txtScanID.Text );
			}
			else
			{
				SetCountDownTimer();
			}

			// clear the field before sending back a response.
			this.txtScanID.Focus();
			txtScanID.Text = "";
		}

		#region Events
		protected void btnSearchByPhone_Click( object sender, EventArgs e )
		{
			Response.Redirect( "default.aspx?page=" + SearchByPhonePageSetting );
		}
		
		#endregion

		private void SetCampus()
		{
			Session[ Constants.SESS_CAMPUSCODE ] = CampusSetting;
		}

		private void SetCountDownTimer()
		{
			string campusCode = (string)Session[ Constants.SESS_CAMPUSCODE ];

			// If it is check-in time, then hide the countdown
			if ( CheckInBLL.IsReadyToCheckIn( Convert.ToInt32( OccurrenceCategoryIDSetting ), campusCode ) )
			{
				this.lblTimeRemaining.Visible = false;
				this.pnlSwipeCard.Visible = true;
				if ( AllowScanByPhoneSetting )
				{
					this.btnSearchByPhone.Visible = true;
					this.btnSearchByPhone.Text = SearchByPhoneMessageSetting;
				}
			}
			else
			{
				this.lblTimeRemaining.Visible = true;
				OccurrenceCollection occurrences = CheckInBLL.LoadFutureOpenEvent( Convert.ToInt32( OccurrenceCategoryIDSetting ), campusCode );
				if ( occurrences.Count > 0 )
				{
					// This will start the countdown... after which the javascript will submit the page.
					DateTime startsAt = occurrences[ 0 ].CheckInStart;
					DateTime timeOnly = new DateTime( DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, startsAt.Hour, startsAt.Minute, startsAt.Second );
					//lblTimeRemaining.Text = "<script language='JavaScript'>StartTime=\"" + timeOnly.ToString() + "\";</script><script language='JavaScript' src='UserControls/Custom/Cccev/CheckIn/misc/countdown.js'></script>";
					lblTimeRemaining.Text = "<script language='JavaScript'>NowTime=\"" + DateTime.Now.ToString() + "\"; StartTime=\"" + timeOnly.ToString() + "\";</script><script language='JavaScript' src='UserControls/Custom/Cccev/CheckIn/misc/countdown.js'></script>";
				}
				else
				{
					lblTimeRemaining.Text = EventIsClosedMessageSetting;
				}
			}
		}
	}
}
